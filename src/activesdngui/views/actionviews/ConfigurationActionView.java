/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package activesdngui.views.actionviews;

import activesdngui.model.GenericSignaturePanel;
import activesdngui.model.Signature;
import java.util.Arrays;
import java.util.HashMap;

/**
 *
 * @author mislam7
 */
public class ConfigurationActionView extends GenericSignaturePanel {

    public static String SIG_NAME = "CONFIG_ACTION";

    public static final String ACTION = "Action";
    
    public static final String[] ODL_ACTIONS = {"Drop", "Notify", "Drop and Notify", "Migrate"};
    /**
     * Creates new form ConfigurationAction
     */
    public ConfigurationActionView() {
        initComponents();
        customInit();
    }
    
    private void customInit() {

        //Create the combo box, select item at index 4.
        //Indices start at 0, so 4 specifies the pig.
        for (String openFlowAction : ODL_ACTIONS) {
            jcbOdlActions.addItem(openFlowAction);
        }
        jcbOdlActions.setSelectedIndex(0);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jcbOdlActions = new javax.swing.JComboBox<>();

        setPreferredSize(new java.awt.Dimension(520, 365));

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel1.setText("OpenDaylight Actions");

        jcbOdlActions.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {}));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jcbOdlActions, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(213, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jcbOdlActions, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(352, 352, 352))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JComboBox<String> jcbOdlActions;
    // End of variables declaration//GEN-END:variables

    @Override
    public Signature parseData() {
        Signature signature = new Signature(SIG_NAME, Signature.CONFIG_ID);
        
        HashMap<String, Object> fields = signature.getFields();
        fields.put(ACTION, ODL_ACTIONS[jcbOdlActions.getSelectedIndex()]);
        
        return signature;
    }

    @Override
    public void loadData(Signature signature) {
        if (signature != null) {
            HashMap<String, Object> fields = signature.getFields();
            int index;
            index = Arrays.asList(ODL_ACTIONS).indexOf((String) fields.get(ACTION));
            jcbOdlActions.setSelectedIndex(index);
        }
    }

    @Override
    public Integer getSignatureId() {
        return Signature.CONFIG_ID;
    }

}
