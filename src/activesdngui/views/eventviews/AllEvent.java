/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package activesdngui.views.eventviews;

import activesdngui.controller.EventSpecificationController;
import activesdngui.model.Event;
import activesdngui.model.ListData;
import activesdngui.model.ListDataModel;
import activesdngui.model.Pattern;
import activesdngui.utility.Utilities;
import java.util.ArrayList;
import java.util.Collections;
import java.util.HashMap;
import java.util.List;
import javax.swing.BoxLayout;
import javax.swing.DefaultListModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;

/**
 *
 * @author mislam7
 */
public class AllEvent extends javax.swing.JPanel {

    private HashMap<Integer, Event> events = new HashMap<>();
    private EventSpecificationController controller;

    public AllEvent() {
        initComponents();
        customInit();
    }

    private void customInit() {
        EventView eventView = new EventView(this);
        jlEventList.setSelectedIndex(-1);
        jpEventViewHolder.removeAll();
        jpEventViewHolder.setLayout(new BoxLayout(jpEventViewHolder, BoxLayout.X_AXIS));
        jpEventViewHolder.add(eventView);
        jpEventViewHolder.revalidate();
        jpEventViewHolder.repaint();
    }
    
    public void eventUpdated(Event event) {
        if (event.getIsDeleted()) {
            events.remove(event.getId());
        } else {
            events.put(event.getId(), event);
        }
        List<Integer> ids = new ArrayList<>(events.keySet());
        Collections.sort(ids);
        List<ListData> eventList = new ArrayList<>();

        for (Integer id : ids) {
            Event e = events.get(id);
            System.out.println("Event: " + id + ", name: " + e.getName());
            eventList.add(new ListData(e.getName(), e));
        }

        model.setData(eventList);
        updateEventList();
        jlEventList.addListSelectionListener(new CustomListSelectionListner());
        
        if (event.getIsDeleted()) {
            jpEventViewHolder.removeAll();
            jpEventViewHolder.revalidate();
        }
        
        this.revalidate();
        this.repaint();
        
        customInit();
    }

    private void updateEventList() {
        
        DefaultListModel nmodel = (DefaultListModel) jlEventList.getModel();
        nmodel.removeAllElements();
        List<ListData> listDatasToBeAdded = model.getData();
        
        for (ListData listData : listDatasToBeAdded) {
            String name = listData.getName();
            System.out.println("listdata name: " + name);
            nmodel.addElement(listData);
        }
    }


    class CustomListSelectionListner implements ListSelectionListener {

        @Override
        public void valueChanged(ListSelectionEvent e) {
            int[] indexs = jlEventList.getSelectedIndices();
            Utilities.pirntArray(indexs);
            int index = jlEventList.getSelectedIndex();
            if (index != -1) {
                ListData data = model.getData().get(index);

                EventView eventView = new EventView(AllEvent.this);
                eventView.loadData((Event) data.getData());
                jpEventViewHolder.removeAll();
                jpEventViewHolder.setLayout(new BoxLayout(jpEventViewHolder, BoxLayout.X_AXIS));
                jpEventViewHolder.add(eventView);
                jpEventViewHolder.revalidate();
                jpEventViewHolder.repaint();
            }
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane1 = new javax.swing.JSplitPane();
        jPanel1 = new javax.swing.JPanel();
        jToolBar1 = new javax.swing.JToolBar();
        jbCreateEvent = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jlEventList = new javax.swing.JList<>();
        jbCreateEventExpression = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jSplitPane2 = new javax.swing.JSplitPane();
        jpPattern = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jtfWindow = new javax.swing.JTextField();
        jtfCount = new javax.swing.JTextField();
        jpEventViewHolder = new javax.swing.JPanel();

        jSplitPane1.setDividerLocation(250);

        jToolBar1.setRollover(true);

        jbCreateEvent.setText("New event");
        jbCreateEvent.setFocusable(false);
        jbCreateEvent.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jbCreateEvent.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jbCreateEvent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCreateEventActionPerformed(evt);
            }
        });
        jToolBar1.add(jbCreateEvent);

        model = new ListDataModel();
        jlEventList.setModel(new DefaultListModel());
        jScrollPane1.setViewportView(jlEventList);

        jbCreateEventExpression.setText("Create Event Expression");
        jbCreateEventExpression.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCreateEventExpressionActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jbCreateEventExpression)
                        .addGap(0, 41, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 465, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbCreateEventExpression)
                .addContainerGap())
        );

        jSplitPane1.setLeftComponent(jPanel1);

        jSplitPane2.setDividerLocation(750);

        jLabel2.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel2.setText("Pattern");

        jLabel3.setText("Window");

        jLabel4.setText("Count");

        javax.swing.GroupLayout jpPatternLayout = new javax.swing.GroupLayout(jpPattern);
        jpPattern.setLayout(jpPatternLayout);
        jpPatternLayout.setHorizontalGroup(
            jpPatternLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpPatternLayout.createSequentialGroup()
                .addGap(14, 65, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(81, 81, 81))
            .addGroup(jpPatternLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpPatternLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(jpPatternLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jtfCount, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfWindow, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jpPatternLayout.setVerticalGroup(
            jpPatternLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpPatternLayout.createSequentialGroup()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addGroup(jpPatternLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfWindow, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpPatternLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfCount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addContainerGap(458, Short.MAX_VALUE))
        );

        jSplitPane2.setRightComponent(jpPattern);

        javax.swing.GroupLayout jpEventViewHolderLayout = new javax.swing.GroupLayout(jpEventViewHolder);
        jpEventViewHolder.setLayout(jpEventViewHolderLayout);
        jpEventViewHolderLayout.setHorizontalGroup(
            jpEventViewHolderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 748, Short.MAX_VALUE)
        );
        jpEventViewHolderLayout.setVerticalGroup(
            jpEventViewHolderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 532, Short.MAX_VALUE)
        );

        jSplitPane2.setLeftComponent(jpEventViewHolder);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane2)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSplitPane2))
        );

        jSplitPane1.setRightComponent(jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jSplitPane1)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jbCreateEventActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCreateEventActionPerformed
        customInit();
    }//GEN-LAST:event_jbCreateEventActionPerformed

    private void jbCreateEventExpressionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCreateEventExpressionActionPerformed
        //pattern
        Pattern pattern = new Pattern();
        HashMap<String, Object> fields = pattern.getFields();
        fields.put(Pattern.WINDOW, jtfWindow.getText());
        fields.put(Pattern.COUNT, jtfCount.getText());

        //events
        int[] indexs = jlEventList.getSelectedIndices();
        Utilities.pirntArray(indexs);
        List<Event> eventList = new ArrayList<>();

        for (int index : indexs) {
            eventList.add((Event) model.getData().get(index).getData());
        }

        controller.setEvents(eventList);
        controller.setPattern(pattern);
        Utilities.printController(controller);
    }//GEN-LAST:event_jbCreateEventExpressionActionPerformed



    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JSplitPane jSplitPane2;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JButton jbCreateEvent;
    private javax.swing.JButton jbCreateEventExpression;
    private javax.swing.JList<String> jlEventList;
    private ListDataModel model;
    private javax.swing.JPanel jpEventViewHolder;
    private javax.swing.JPanel jpPattern;
    private javax.swing.JTextField jtfCount;
    private javax.swing.JTextField jtfWindow;
    // End of variables declaration//GEN-END:variables

    public EventSpecificationController getController() {
        return controller;
    }

    public void setController(EventSpecificationController controller) {
        this.controller = controller;
    }

}
